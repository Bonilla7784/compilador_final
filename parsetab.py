
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AYUDA BOOL COLON COMMA CTEI DIVIDE ELSE EQUALS EQUAL_EQUAL FALSE FLOAT FLOAT_NUMBER GREATER_EQUAL GREATER_THAN ID IF INT LBRACE LBRACKET LESS_EQUAL LESS_THAN LPAREN MAIN MINUS MULTIPLY NOT_EQUAL PLUS PRINT PROGRAM RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING STRING_LITERAL TEACH_DIVISION TEACH_FUNCTION_CALL TEACH_FUNCTION_DECLARATION TEACH_IF TEACH_MULTIPLICATION TEACH_SUBSTRACTION TEACH_SUM TEACH_WHILE TRUE VARIABLES VOID WHILEprogram : PROGRAM ID SEMICOLON placeholder_goto_main create_scopes global_scope main_function end_scopes fill_goto_mainplaceholder_goto_main : global_scope : VARIABLES LBRACE decl_list RBRACE function_decl_list\n                    | VARIABLES LBRACE decl_list RBRACEfunction_decl_list : function_decl function_decl_list\n                          | emptymain_function : MAIN LPAREN RPAREN LBRACE start_main stmt_list RBRACEstart_main : fill_goto_main : create_scopes : end_scopes : decl_list : decl SEMICOLON decl_list\n                 | decl SEMICOLON\n                 | emptydecl : type ID\n            | array_decltype : INT\n            | FLOAT\n            | STRING\n            | BOOLstmt_list : stmt SEMICOLON stmt_list\n                 | stmt SEMICOLONstmt : assign\n            | array_assign\n            | print\n            | conditional\n            | loop\n            | function_call\n            | decl\n            | built_in_function\n            | return_stmtbuilt_in_function : TEACH_SUM LPAREN RPAREN\n                         | TEACH_SUBSTRACTION LPAREN RPAREN\n                         | TEACH_MULTIPLICATION LPAREN RPAREN\n                         | TEACH_DIVISION LPAREN RPAREN\n                         | TEACH_IF LPAREN RPAREN\n                         | TEACH_WHILE LPAREN RPAREN\n                         | TEACH_FUNCTION_DECLARATION LPAREN RPAREN\n                         | TEACH_FUNCTION_CALL LPAREN RPAREN\n                         | AYUDA LPAREN RPARENassign : ID EQUALS exprexpr : expr PLUS term\n            | expr MINUS term\n            | expr comp_op term\n            | termterm : term MULTIPLY factor\n            | term DIVIDE factor\n            | factor\n            | function_call\n            | array_accessfactor : LPAREN expr RPAREN\n              | CTEI\n              | FLOAT_NUMBER\n              | STRING_LITERAL\n              | TRUE\n              | FALSE\n              | ID\n              | function_callprint : PRINT COLON expr\n             | PRINT COLON expr COMMA exprconditional : IF LPAREN comp_expr RPAREN LBRACE stmt_list RBRACE else_stmt\n                   | IF LPAREN comp_expr RPAREN LBRACE stmt_list RBRACEcomp_expr : expr comp_op exprcomp_op : LESS_THAN\n               | GREATER_THAN\n               | LESS_EQUAL\n               | GREATER_EQUAL\n               | EQUAL_EQUAL\n               | NOT_EQUALelse_stmt : ELSE LBRACE else_part stmt_list RBRACE\n                 | emptyelse_part : loop : WHILE LPAREN comp_expr RPAREN LBRACE stmt_list RBRACEcreate_function_scope : function_decl : type ID LPAREN create_function_scope param_list RPAREN LBRACE stmt_list end_scopes RBRACE\n                     | VOID ID LPAREN create_function_scope param_list RPAREN LBRACE stmt_list_without_return end_scopes RBRACEstmt_list_without_return : stmt_without_return SEMICOLON stmt_list_without_return\n                 | stmt_without_return SEMICOLONstmt_without_return : assign\n            | array_assign\n            | print\n            | conditional_without_return\n            | loop\n            | function_call\n            | decl\n            | built_in_functionconditional_without_return : IF LPAREN comp_expr RPAREN LBRACE stmt_list_without_return RBRACE else_stmt\n                   | IF LPAREN comp_expr RPAREN LBRACE stmt_list_without_return RBRACEreturn_stmt : RETURN exprfunction_call : ID LPAREN arg_list RPARENarg_list : arg_list COMMA expr\n                | exprparam_list : param COMMA param_list\n                  | param\n                  | emptyparam : type IDarray_decl : type ID LBRACKET CTEI RBRACKETarray_assign : ID EQUALS LBRACE CTEI_list RBRACE CTEI_list : CTEI\n                | CTEI_list COMMA CTEIarray_access : ID LBRACKET expr RBRACKETempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,9,12,23,69,],[0,-11,-9,-1,-7,]),'ID':([2,17,19,20,21,22,28,32,33,36,65,70,71,72,73,74,75,90,117,118,119,120,121,122,123,124,125,126,127,129,130,138,139,141,160,163,165,167,187,188,196,198,199,],[3,27,-17,-18,-19,-20,-8,38,39,52,96,52,96,96,96,96,96,96,96,96,96,-64,-65,-66,-67,-68,-69,147,147,96,152,96,96,96,52,52,52,52,52,96,-72,52,52,]),'SEMICOLON':([3,15,18,27,42,43,44,45,46,47,48,49,50,51,68,85,86,87,88,89,91,92,93,94,95,96,100,104,108,109,110,111,112,113,114,115,116,137,143,144,145,146,147,148,149,150,156,159,164,173,174,175,176,177,178,179,180,181,183,184,189,191,202,203,204,],[4,26,-16,-15,70,-23,-24,-25,-26,-27,-28,-29,-30,-31,-97,-89,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,-41,-59,-32,-33,-34,-35,-36,-37,-38,-39,-40,-90,-42,-43,-44,-46,-57,-58,-47,-51,-98,-60,-101,187,-79,-80,-81,-82,-83,-84,-85,-86,-62,-73,-61,-71,-70,-88,-87,]),'VARIABLES':([4,5,6,],[-2,-10,8,]),'MAIN':([7,25,29,30,31,37,192,193,],[10,-4,-3,-102,-6,-5,-75,-76,]),'LBRACE':([8,24,71,140,142,153,155,190,197,],[11,28,101,160,163,165,167,196,199,]),'LPAREN':([10,38,39,52,54,55,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,90,96,117,118,119,120,121,122,123,124,125,126,127,129,138,139,141,147,182,188,],[13,66,67,72,74,75,76,77,78,79,80,81,82,83,84,90,90,90,90,90,90,90,72,90,90,90,-64,-65,-66,-67,-68,-69,90,90,90,90,90,90,72,188,90,]),'RBRACE':([11,14,16,26,34,41,70,99,135,136,168,169,170,171,172,185,186,187,194,200,201,],[-102,25,-14,-13,-12,69,-22,-21,156,-99,-100,183,184,-11,-11,192,193,-78,-77,202,203,]),'INT':([11,25,26,28,30,36,66,67,70,97,98,154,160,163,165,167,187,192,193,196,198,199,],[19,19,19,-8,19,19,-74,-74,19,19,19,19,19,19,19,19,19,-75,-76,-72,19,19,]),'FLOAT':([11,25,26,28,30,36,66,67,70,97,98,154,160,163,165,167,187,192,193,196,198,199,],[20,20,20,-8,20,20,-74,-74,20,20,20,20,20,20,20,20,20,-75,-76,-72,20,20,]),'STRING':([11,25,26,28,30,36,66,67,70,97,98,154,160,163,165,167,187,192,193,196,198,199,],[21,21,21,-8,21,21,-74,-74,21,21,21,21,21,21,21,21,21,-75,-76,-72,21,21,]),'BOOL':([11,25,26,28,30,36,66,67,70,97,98,154,160,163,165,167,187,192,193,196,198,199,],[22,22,22,-8,22,22,-74,-74,22,22,22,22,22,22,22,22,22,-75,-76,-72,22,22,]),'RPAREN':([13,66,67,76,77,78,79,80,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,98,102,103,105,107,128,131,132,133,134,137,143,144,145,146,147,148,149,150,152,154,158,161,162,164,166,195,],[24,-74,-74,108,109,110,111,112,113,114,115,116,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,-102,-102,137,-92,140,142,150,153,-94,-95,155,-90,-42,-43,-44,-46,-57,-58,-47,-51,-96,-102,-91,-63,-45,-101,-93,197,]),'VOID':([25,30,192,193,],[33,33,-75,-76,]),'LBRACKET':([27,96,],[35,129,]),'PRINT':([28,36,70,160,163,165,167,187,196,198,199,],[-8,53,53,53,53,53,53,53,-72,53,53,]),'IF':([28,36,70,160,163,165,167,187,196,198,199,],[-8,54,54,54,54,54,182,182,-72,54,182,]),'WHILE':([28,36,70,160,163,165,167,187,196,198,199,],[-8,55,55,55,55,55,55,55,-72,55,55,]),'TEACH_SUM':([28,36,70,160,163,165,167,187,196,198,199,],[-8,56,56,56,56,56,56,56,-72,56,56,]),'TEACH_SUBSTRACTION':([28,36,70,160,163,165,167,187,196,198,199,],[-8,57,57,57,57,57,57,57,-72,57,57,]),'TEACH_MULTIPLICATION':([28,36,70,160,163,165,167,187,196,198,199,],[-8,58,58,58,58,58,58,58,-72,58,58,]),'TEACH_DIVISION':([28,36,70,160,163,165,167,187,196,198,199,],[-8,59,59,59,59,59,59,59,-72,59,59,]),'TEACH_IF':([28,36,70,160,163,165,167,187,196,198,199,],[-8,60,60,60,60,60,60,60,-72,60,60,]),'TEACH_WHILE':([28,36,70,160,163,165,167,187,196,198,199,],[-8,61,61,61,61,61,61,61,-72,61,61,]),'TEACH_FUNCTION_DECLARATION':([28,36,70,160,163,165,167,187,196,198,199,],[-8,62,62,62,62,62,62,62,-72,62,62,]),'TEACH_FUNCTION_CALL':([28,36,70,160,163,165,167,187,196,198,199,],[-8,63,63,63,63,63,63,63,-72,63,63,]),'AYUDA':([28,36,70,160,163,165,167,187,196,198,199,],[-8,64,64,64,64,64,64,64,-72,64,64,]),'RETURN':([28,36,70,160,163,165,196,198,],[-8,65,65,65,65,65,-72,65,]),'CTEI':([35,65,71,72,73,74,75,90,101,117,118,119,120,121,122,123,124,125,126,127,129,138,139,141,157,188,],[40,91,91,91,91,91,91,91,136,91,91,91,-64,-65,-66,-67,-68,-69,91,91,91,91,91,91,168,91,]),'RBRACKET':([40,86,87,88,89,91,92,93,94,95,96,137,143,144,145,146,147,148,149,150,151,164,],[68,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,-90,-42,-43,-44,-46,-57,-58,-47,-51,164,-101,]),'EQUALS':([52,],[71,]),'COLON':([53,],[73,]),'FLOAT_NUMBER':([65,71,72,73,74,75,90,117,118,119,120,121,122,123,124,125,126,127,129,138,139,141,188,],[92,92,92,92,92,92,92,92,92,92,-64,-65,-66,-67,-68,-69,92,92,92,92,92,92,92,]),'STRING_LITERAL':([65,71,72,73,74,75,90,117,118,119,120,121,122,123,124,125,126,127,129,138,139,141,188,],[93,93,93,93,93,93,93,93,93,93,-64,-65,-66,-67,-68,-69,93,93,93,93,93,93,93,]),'TRUE':([65,71,72,73,74,75,90,117,118,119,120,121,122,123,124,125,126,127,129,138,139,141,188,],[94,94,94,94,94,94,94,94,94,94,-64,-65,-66,-67,-68,-69,94,94,94,94,94,94,94,]),'FALSE':([65,71,72,73,74,75,90,117,118,119,120,121,122,123,124,125,126,127,129,138,139,141,188,],[95,95,95,95,95,95,95,95,95,95,-64,-65,-66,-67,-68,-69,95,95,95,95,95,95,95,]),'PLUS':([85,86,87,88,89,91,92,93,94,95,96,100,103,104,106,128,137,143,144,145,146,147,148,149,150,151,158,159,161,162,164,],[117,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,117,117,117,117,117,-90,-42,-43,-44,-46,-57,-58,-47,-51,117,117,117,117,-44,-101,]),'MINUS':([85,86,87,88,89,91,92,93,94,95,96,100,103,104,106,128,137,143,144,145,146,147,148,149,150,151,158,159,161,162,164,],[118,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,118,118,118,118,118,-90,-42,-43,-44,-46,-57,-58,-47,-51,118,118,118,118,-44,-101,]),'LESS_THAN':([85,86,87,88,89,91,92,93,94,95,96,100,103,104,106,128,137,143,144,145,146,147,148,149,150,151,158,159,161,162,164,],[120,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,120,120,120,120,120,-90,-42,-43,-44,-46,-57,-58,-47,-51,120,120,120,120,-44,-101,]),'GREATER_THAN':([85,86,87,88,89,91,92,93,94,95,96,100,103,104,106,128,137,143,144,145,146,147,148,149,150,151,158,159,161,162,164,],[121,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,121,121,121,121,121,-90,-42,-43,-44,-46,-57,-58,-47,-51,121,121,121,121,-44,-101,]),'LESS_EQUAL':([85,86,87,88,89,91,92,93,94,95,96,100,103,104,106,128,137,143,144,145,146,147,148,149,150,151,158,159,161,162,164,],[122,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,122,122,122,122,122,-90,-42,-43,-44,-46,-57,-58,-47,-51,122,122,122,122,-44,-101,]),'GREATER_EQUAL':([85,86,87,88,89,91,92,93,94,95,96,100,103,104,106,128,137,143,144,145,146,147,148,149,150,151,158,159,161,162,164,],[123,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,123,123,123,123,123,-90,-42,-43,-44,-46,-57,-58,-47,-51,123,123,123,123,-44,-101,]),'EQUAL_EQUAL':([85,86,87,88,89,91,92,93,94,95,96,100,103,104,106,128,137,143,144,145,146,147,148,149,150,151,158,159,161,162,164,],[124,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,124,124,124,124,124,-90,-42,-43,-44,-46,-57,-58,-47,-51,124,124,124,124,-44,-101,]),'NOT_EQUAL':([85,86,87,88,89,91,92,93,94,95,96,100,103,104,106,128,137,143,144,145,146,147,148,149,150,151,158,159,161,162,164,],[125,-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,125,125,125,125,125,-90,-42,-43,-44,-46,-57,-58,-47,-51,125,125,125,125,-44,-101,]),'COMMA':([86,87,88,89,91,92,93,94,95,96,102,103,104,132,135,136,137,143,144,145,146,147,148,149,150,152,158,164,168,],[-45,-48,-49,-50,-52,-53,-54,-55,-56,-57,138,-92,139,154,157,-99,-90,-42,-43,-44,-46,-57,-58,-47,-51,-96,-91,-101,-100,]),'MULTIPLY':([86,87,88,89,91,92,93,94,95,96,137,143,144,145,146,147,148,149,150,162,164,],[126,-48,-49,-50,-52,-53,-54,-55,-56,-57,-90,126,126,126,-46,-57,-58,-47,-51,126,-101,]),'DIVIDE':([86,87,88,89,91,92,93,94,95,96,137,143,144,145,146,147,148,149,150,162,164,],[127,-48,-49,-50,-52,-53,-54,-55,-56,-57,-90,127,127,127,-46,-57,-58,-47,-51,127,-101,]),'ELSE':([183,203,],[190,190,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'placeholder_goto_main':([4,],[5,]),'create_scopes':([5,],[6,]),'global_scope':([6,],[7,]),'main_function':([7,],[9,]),'end_scopes':([9,171,172,],[12,185,186,]),'decl_list':([11,26,],[14,34,]),'decl':([11,26,36,70,160,163,165,167,187,198,199,],[15,15,49,49,49,49,49,180,180,49,180,]),'empty':([11,25,26,30,97,98,154,183,203,],[16,31,16,31,133,133,133,191,191,]),'type':([11,25,26,30,36,70,97,98,154,160,163,165,167,187,198,199,],[17,32,17,32,17,17,130,130,130,17,17,17,17,17,17,17,]),'array_decl':([11,26,36,70,160,163,165,167,187,198,199,],[18,18,18,18,18,18,18,18,18,18,18,]),'fill_goto_main':([12,],[23,]),'function_decl_list':([25,30,],[29,37,]),'function_decl':([25,30,],[30,30,]),'start_main':([28,],[36,]),'stmt_list':([36,70,160,163,165,198,],[41,99,169,170,171,200,]),'stmt':([36,70,160,163,165,198,],[42,42,42,42,42,42,]),'assign':([36,70,160,163,165,167,187,198,199,],[43,43,43,43,43,174,174,43,174,]),'array_assign':([36,70,160,163,165,167,187,198,199,],[44,44,44,44,44,175,175,44,175,]),'print':([36,70,160,163,165,167,187,198,199,],[45,45,45,45,45,176,176,45,176,]),'conditional':([36,70,160,163,165,198,],[46,46,46,46,46,46,]),'loop':([36,70,160,163,165,167,187,198,199,],[47,47,47,47,47,178,178,47,178,]),'function_call':([36,65,70,71,72,73,74,75,90,117,118,119,126,127,129,138,139,141,160,163,165,167,187,188,198,199,],[48,88,48,88,88,88,88,88,88,88,88,88,148,148,88,88,88,88,48,48,48,179,179,88,48,179,]),'built_in_function':([36,70,160,163,165,167,187,198,199,],[50,50,50,50,50,181,181,50,181,]),'return_stmt':([36,70,160,163,165,198,],[51,51,51,51,51,51,]),'expr':([65,71,72,73,74,75,90,129,138,139,141,188,],[85,100,103,104,106,106,128,151,158,159,161,106,]),'term':([65,71,72,73,74,75,90,117,118,119,129,138,139,141,188,],[86,86,86,86,86,86,86,143,144,145,86,86,86,162,86,]),'factor':([65,71,72,73,74,75,90,117,118,119,126,127,129,138,139,141,188,],[87,87,87,87,87,87,87,87,87,87,146,149,87,87,87,87,87,]),'array_access':([65,71,72,73,74,75,90,117,118,119,129,138,139,141,188,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'create_function_scope':([66,67,],[97,98,]),'arg_list':([72,],[102,]),'comp_expr':([74,75,188,],[105,107,195,]),'comp_op':([85,100,103,104,106,128,151,158,159,161,],[119,119,119,119,141,119,119,119,119,119,]),'param_list':([97,98,154,],[131,134,166,]),'param':([97,98,154,],[132,132,132,]),'CTEI_list':([101,],[135,]),'stmt_list_without_return':([167,187,199,],[172,194,201,]),'stmt_without_return':([167,187,199,],[173,173,173,]),'conditional_without_return':([167,187,199,],[177,177,177,]),'else_stmt':([183,203,],[189,204,]),'else_part':([196,],[198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON placeholder_goto_main create_scopes global_scope main_function end_scopes fill_goto_main','program',9,'p_program','parser_2.py',31),
  ('placeholder_goto_main -> <empty>','placeholder_goto_main',0,'p_placeholder_goto_main','parser_2.py',36),
  ('global_scope -> VARIABLES LBRACE decl_list RBRACE function_decl_list','global_scope',5,'p_global_scope','parser_2.py',42),
  ('global_scope -> VARIABLES LBRACE decl_list RBRACE','global_scope',4,'p_global_scope','parser_2.py',43),
  ('function_decl_list -> function_decl function_decl_list','function_decl_list',2,'p_function_decl_list','parser_2.py',51),
  ('function_decl_list -> empty','function_decl_list',1,'p_function_decl_list','parser_2.py',52),
  ('main_function -> MAIN LPAREN RPAREN LBRACE start_main stmt_list RBRACE','main_function',7,'p_main_function','parser_2.py',60),
  ('start_main -> <empty>','start_main',0,'p_start_main','parser_2.py',65),
  ('fill_goto_main -> <empty>','fill_goto_main',0,'p_fill_goto_main','parser_2.py',72),
  ('create_scopes -> <empty>','create_scopes',0,'p_create_scopes','parser_2.py',78),
  ('end_scopes -> <empty>','end_scopes',0,'p_end_scopes','parser_2.py',82),
  ('decl_list -> decl SEMICOLON decl_list','decl_list',3,'p_decl_list','parser_2.py',87),
  ('decl_list -> decl SEMICOLON','decl_list',2,'p_decl_list','parser_2.py',88),
  ('decl_list -> empty','decl_list',1,'p_decl_list','parser_2.py',89),
  ('decl -> type ID','decl',2,'p_decl','parser_2.py',97),
  ('decl -> array_decl','decl',1,'p_decl','parser_2.py',98),
  ('type -> INT','type',1,'p_type','parser_2.py',106),
  ('type -> FLOAT','type',1,'p_type','parser_2.py',107),
  ('type -> STRING','type',1,'p_type','parser_2.py',108),
  ('type -> BOOL','type',1,'p_type','parser_2.py',109),
  ('stmt_list -> stmt SEMICOLON stmt_list','stmt_list',3,'p_stmt_list','parser_2.py',114),
  ('stmt_list -> stmt SEMICOLON','stmt_list',2,'p_stmt_list','parser_2.py',115),
  ('stmt -> assign','stmt',1,'p_stmt','parser_2.py',124),
  ('stmt -> array_assign','stmt',1,'p_stmt','parser_2.py',125),
  ('stmt -> print','stmt',1,'p_stmt','parser_2.py',126),
  ('stmt -> conditional','stmt',1,'p_stmt','parser_2.py',127),
  ('stmt -> loop','stmt',1,'p_stmt','parser_2.py',128),
  ('stmt -> function_call','stmt',1,'p_stmt','parser_2.py',129),
  ('stmt -> decl','stmt',1,'p_stmt','parser_2.py',130),
  ('stmt -> built_in_function','stmt',1,'p_stmt','parser_2.py',131),
  ('stmt -> return_stmt','stmt',1,'p_stmt','parser_2.py',132),
  ('built_in_function -> TEACH_SUM LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',137),
  ('built_in_function -> TEACH_SUBSTRACTION LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',138),
  ('built_in_function -> TEACH_MULTIPLICATION LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',139),
  ('built_in_function -> TEACH_DIVISION LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',140),
  ('built_in_function -> TEACH_IF LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',141),
  ('built_in_function -> TEACH_WHILE LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',142),
  ('built_in_function -> TEACH_FUNCTION_DECLARATION LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',143),
  ('built_in_function -> TEACH_FUNCTION_CALL LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',144),
  ('built_in_function -> AYUDA LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',145),
  ('assign -> ID EQUALS expr','assign',3,'p_assign','parser_2.py',156),
  ('expr -> expr PLUS term','expr',3,'p_expr','parser_2.py',169),
  ('expr -> expr MINUS term','expr',3,'p_expr','parser_2.py',170),
  ('expr -> expr comp_op term','expr',3,'p_expr','parser_2.py',171),
  ('expr -> term','expr',1,'p_expr','parser_2.py',172),
  ('term -> term MULTIPLY factor','term',3,'p_term','parser_2.py',197),
  ('term -> term DIVIDE factor','term',3,'p_term','parser_2.py',198),
  ('term -> factor','term',1,'p_term','parser_2.py',199),
  ('term -> function_call','term',1,'p_term','parser_2.py',200),
  ('term -> array_access','term',1,'p_term','parser_2.py',201),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','parser_2.py',224),
  ('factor -> CTEI','factor',1,'p_factor','parser_2.py',225),
  ('factor -> FLOAT_NUMBER','factor',1,'p_factor','parser_2.py',226),
  ('factor -> STRING_LITERAL','factor',1,'p_factor','parser_2.py',227),
  ('factor -> TRUE','factor',1,'p_factor','parser_2.py',228),
  ('factor -> FALSE','factor',1,'p_factor','parser_2.py',229),
  ('factor -> ID','factor',1,'p_factor','parser_2.py',230),
  ('factor -> function_call','factor',1,'p_factor','parser_2.py',231),
  ('print -> PRINT COLON expr','print',3,'p_print','parser_2.py',271),
  ('print -> PRINT COLON expr COMMA expr','print',5,'p_print','parser_2.py',272),
  ('conditional -> IF LPAREN comp_expr RPAREN LBRACE stmt_list RBRACE else_stmt','conditional',8,'p_conditional','parser_2.py',278),
  ('conditional -> IF LPAREN comp_expr RPAREN LBRACE stmt_list RBRACE','conditional',7,'p_conditional','parser_2.py',279),
  ('comp_expr -> expr comp_op expr','comp_expr',3,'p_comp_expr','parser_2.py',289),
  ('comp_op -> LESS_THAN','comp_op',1,'p_comp_op','parser_2.py',311),
  ('comp_op -> GREATER_THAN','comp_op',1,'p_comp_op','parser_2.py',312),
  ('comp_op -> LESS_EQUAL','comp_op',1,'p_comp_op','parser_2.py',313),
  ('comp_op -> GREATER_EQUAL','comp_op',1,'p_comp_op','parser_2.py',314),
  ('comp_op -> EQUAL_EQUAL','comp_op',1,'p_comp_op','parser_2.py',315),
  ('comp_op -> NOT_EQUAL','comp_op',1,'p_comp_op','parser_2.py',316),
  ('else_stmt -> ELSE LBRACE else_part stmt_list RBRACE','else_stmt',5,'p_else_stmt','parser_2.py',322),
  ('else_stmt -> empty','else_stmt',1,'p_else_stmt','parser_2.py',323),
  ('else_part -> <empty>','else_part',0,'p_else_part','parser_2.py',332),
  ('loop -> WHILE LPAREN comp_expr RPAREN LBRACE stmt_list RBRACE','loop',7,'p_loop','parser_2.py',338),
  ('create_function_scope -> <empty>','create_function_scope',0,'p_create_function_scope','parser_2.py',345),
  ('function_decl -> type ID LPAREN create_function_scope param_list RPAREN LBRACE stmt_list end_scopes RBRACE','function_decl',10,'p_function_decl','parser_2.py',353),
  ('function_decl -> VOID ID LPAREN create_function_scope param_list RPAREN LBRACE stmt_list_without_return end_scopes RBRACE','function_decl',10,'p_function_decl','parser_2.py',354),
  ('stmt_list_without_return -> stmt_without_return SEMICOLON stmt_list_without_return','stmt_list_without_return',3,'p_stmt_list_without_return','parser_2.py',371),
  ('stmt_list_without_return -> stmt_without_return SEMICOLON','stmt_list_without_return',2,'p_stmt_list_without_return','parser_2.py',372),
  ('stmt_without_return -> assign','stmt_without_return',1,'p_stmt_without_return','parser_2.py',381),
  ('stmt_without_return -> array_assign','stmt_without_return',1,'p_stmt_without_return','parser_2.py',382),
  ('stmt_without_return -> print','stmt_without_return',1,'p_stmt_without_return','parser_2.py',383),
  ('stmt_without_return -> conditional_without_return','stmt_without_return',1,'p_stmt_without_return','parser_2.py',384),
  ('stmt_without_return -> loop','stmt_without_return',1,'p_stmt_without_return','parser_2.py',385),
  ('stmt_without_return -> function_call','stmt_without_return',1,'p_stmt_without_return','parser_2.py',386),
  ('stmt_without_return -> decl','stmt_without_return',1,'p_stmt_without_return','parser_2.py',387),
  ('stmt_without_return -> built_in_function','stmt_without_return',1,'p_stmt_without_return','parser_2.py',388),
  ('conditional_without_return -> IF LPAREN comp_expr RPAREN LBRACE stmt_list_without_return RBRACE else_stmt','conditional_without_return',8,'p_conditional_without_return','parser_2.py',393),
  ('conditional_without_return -> IF LPAREN comp_expr RPAREN LBRACE stmt_list_without_return RBRACE','conditional_without_return',7,'p_conditional_without_return','parser_2.py',394),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','parser_2.py',403),
  ('function_call -> ID LPAREN arg_list RPAREN','function_call',4,'p_function_call','parser_2.py',419),
  ('arg_list -> arg_list COMMA expr','arg_list',3,'p_arg_list','parser_2.py',426),
  ('arg_list -> expr','arg_list',1,'p_arg_list','parser_2.py',427),
  ('param_list -> param COMMA param_list','param_list',3,'p_param_list','parser_2.py',435),
  ('param_list -> param','param_list',1,'p_param_list','parser_2.py',436),
  ('param_list -> empty','param_list',1,'p_param_list','parser_2.py',437),
  ('param -> type ID','param',2,'p_param','parser_2.py',445),
  ('array_decl -> type ID LBRACKET CTEI RBRACKET','array_decl',5,'p_array_decl','parser_2.py',461),
  ('array_assign -> ID EQUALS LBRACE CTEI_list RBRACE','array_assign',5,'p_array_assign','parser_2.py',469),
  ('CTEI_list -> CTEI','CTEI_list',1,'p_CTEI_list','parser_2.py',486),
  ('CTEI_list -> CTEI_list COMMA CTEI','CTEI_list',3,'p_CTEI_list','parser_2.py',487),
  ('array_access -> ID LBRACKET expr RBRACKET','array_access',4,'p_array_access','parser_2.py',495),
  ('empty -> <empty>','empty',0,'p_empty','parser_2.py',528),
]
