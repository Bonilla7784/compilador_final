
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AYUDA BOOL COLON COMMA CTEI DIVIDE ELSE EQUALS EQUAL_EQUAL FALSE FLOAT FLOAT_NUMBER GREATER_EQUAL GREATER_THAN ID IF INT LBRACE LBRACKET LESS_EQUAL LESS_THAN LPAREN MAIN MINUS MULTIPLY NOT_EQUAL PLUS PRINT PROGRAM RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING STRING_LITERAL TEACH_DIVISION TEACH_FUNCTION_CALL TEACH_FUNCTION_DECLARATION TEACH_IF TEACH_MULTIPLICATION TEACH_SUBSTRACTION TEACH_SUM TEACH_WHILE TRUE VARIABLES VOID WHILEprogram : PROGRAM ID SEMICOLON create_scopes global_scope main_function end_scopesglobal_scope : VARIABLES LBRACE decl_list RBRACE function_decl_list\n                    | VARIABLES LBRACE decl_list RBRACEfunction_decl_list : function_decl function_decl_list\n                          | emptymain_function : MAIN LPAREN RPAREN LBRACE stmt_list RBRACEcreate_scopes : end_scopes : decl_list : decl SEMICOLON decl_list\n                 | decl SEMICOLON\n                 | emptydecl : type ID\n            | array_decl SEMICOLONtype : INT\n            | FLOAT\n            | STRING\n            | BOOLstmt_list : stmt SEMICOLON stmt_list\n                 | stmt SEMICOLONstmt : assign\n            | print\n            | conditional\n            | loop\n            | function_call\n            | decl\n            | built_in_functionbuilt_in_function : TEACH_SUM LPAREN RPAREN\n                         | TEACH_SUBSTRACTION LPAREN RPAREN\n                         | TEACH_MULTIPLICATION LPAREN RPAREN\n                         | TEACH_DIVISION LPAREN RPAREN\n                         | TEACH_IF LPAREN RPAREN\n                         | TEACH_WHILE LPAREN RPAREN\n                         | TEACH_FUNCTION_DECLARATION LPAREN RPAREN\n                         | TEACH_FUNCTION_CALL LPAREN RPAREN\n                         | AYUDA LPAREN RPARENassign : ID EQUALS expr\n              | ID EQUALS function_callexpr1 : term1term1 : factor1factor1 : IDexpr : expr PLUS term\n            | expr MINUS term\n            | expr comp_op term\n            | termterm : term MULTIPLY factor\n            | term DIVIDE factor\n            | factorfactor : LPAREN expr RPAREN\n              | CTEI\n              | FLOAT_NUMBER\n              | STRING_LITERAL\n              | TRUE\n              | FALSE\n              | IDprint : PRINT COLON IDconditional : IF LPAREN comp_expr RPAREN LBRACE stmt_list RBRACE else_stmt\n                   | IF LPAREN comp_expr RPAREN LBRACE stmt_list RBRACEcomp_expr : expr comp_op exprcomp_op : LESS_THAN\n               | GREATER_THAN\n               | LESS_EQUAL\n               | GREATER_EQUAL\n               | EQUAL_EQUAL\n               | NOT_EQUALelse_stmt : ELSE LBRACE else_part stmt_list RBRACE\n                 | emptyelse_part : loop : WHILE LPAREN comp_expr RPAREN LBRACE stmt_list RBRACEcreate_function_scope : function_decl : type ID LPAREN create_function_scope param_list RPAREN LBRACE stmt_list return_stmt end_scopes RBRACE\n                     | VOID ID LPAREN create_function_scope param_list RPAREN LBRACE stmt_list end_scopes RBRACEreturn_stmt : RETURN expr1 SEMICOLON\n                   | emptyfunction_call : ID LPAREN arg_list RPARENparam_list : param COMMA param_list\n                  | param\n                  | emptyparam : type IDarg_list : expr1arg_list : expr1 COMMA arg_listarray_decl : type ID LBRACKET CTEI RBRACKETempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,8,11,61,],[0,-8,-1,-6,]),'ID':([2,16,18,19,20,21,27,31,32,62,63,64,65,66,67,85,113,114,115,116,117,118,119,120,121,122,123,126,128,130,142,145,152,154,163,166,170,],[3,25,-14,-15,-16,-17,44,58,59,44,81,92,97,100,100,100,100,100,100,-59,-60,-61,-62,-63,-64,100,100,92,100,146,44,44,44,44,92,-67,44,]),'SEMICOLON':([3,14,17,25,26,36,37,38,39,40,41,42,43,79,81,82,83,84,86,87,88,89,90,91,92,95,96,97,100,102,103,104,105,106,107,108,109,110,125,135,136,137,138,139,140,155,156,159,161,168,174,],[4,24,26,-12,-13,62,-20,-21,-22,-23,-24,-25,-26,-81,-54,-36,-37,-44,-47,-49,-50,-51,-52,-53,-40,-38,-39,-55,-54,-27,-28,-29,-30,-31,-32,-33,-34,-35,-74,-41,-42,-43,-45,-46,-48,-57,-68,-56,-66,172,-65,]),'VARIABLES':([4,5,],[-7,7,]),'MAIN':([6,23,28,29,30,57,169,171,],[9,-3,-2,-82,-5,-4,-71,-70,]),'LBRACE':([7,22,127,129,147,149,160,],[10,27,142,145,152,154,166,]),'LPAREN':([9,44,46,47,48,49,50,51,52,53,54,55,56,58,59,63,66,67,81,85,113,114,115,116,117,118,119,120,121,122,123,128,],[12,64,66,67,68,69,70,71,72,73,74,75,76,77,78,85,85,85,64,85,85,85,85,-59,-60,-61,-62,-63,-64,85,85,85,]),'RBRACE':([10,13,15,24,33,35,62,80,150,151,157,158,162,164,165,167,172,173,],[-82,23,-11,-10,-9,61,-19,-18,155,156,-82,-8,-8,-73,169,171,-72,174,]),'INT':([10,23,24,27,29,62,77,78,111,112,142,145,148,152,154,166,169,170,171,],[18,18,18,18,18,18,-69,-69,18,18,18,18,18,18,18,-67,-71,18,-70,]),'FLOAT':([10,23,24,27,29,62,77,78,111,112,142,145,148,152,154,166,169,170,171,],[19,19,19,19,19,19,-69,-69,19,19,19,19,19,19,19,-67,-71,19,-70,]),'STRING':([10,23,24,27,29,62,77,78,111,112,142,145,148,152,154,166,169,170,171,],[20,20,20,20,20,20,-69,-69,20,20,20,20,20,20,20,-67,-71,20,-70,]),'BOOL':([10,23,24,27,29,62,77,78,111,112,142,145,148,152,154,166,169,170,171,],[21,21,21,21,21,21,-69,-69,21,21,21,21,21,21,21,-67,-71,21,-70,]),'RPAREN':([12,68,69,70,71,72,73,74,75,76,77,78,84,86,87,88,89,90,91,92,93,94,95,96,98,100,101,111,112,124,131,132,133,134,135,136,137,138,139,140,141,143,144,146,148,153,],[22,102,103,104,105,106,107,108,109,110,-69,-69,-44,-47,-49,-50,-51,-52,-53,-40,125,-79,-38,-39,127,-54,129,-82,-82,140,147,-76,-77,149,-41,-42,-43,-45,-46,-48,-80,-58,-44,-78,-82,-75,]),'VOID':([23,29,169,171,],[32,32,-71,-70,]),'LBRACKET':([25,],[34,]),'PRINT':([27,62,142,145,152,154,166,170,],[45,45,45,45,45,45,-67,45,]),'IF':([27,62,142,145,152,154,166,170,],[46,46,46,46,46,46,-67,46,]),'WHILE':([27,62,142,145,152,154,166,170,],[47,47,47,47,47,47,-67,47,]),'TEACH_SUM':([27,62,142,145,152,154,166,170,],[48,48,48,48,48,48,-67,48,]),'TEACH_SUBSTRACTION':([27,62,142,145,152,154,166,170,],[49,49,49,49,49,49,-67,49,]),'TEACH_MULTIPLICATION':([27,62,142,145,152,154,166,170,],[50,50,50,50,50,50,-67,50,]),'TEACH_DIVISION':([27,62,142,145,152,154,166,170,],[51,51,51,51,51,51,-67,51,]),'TEACH_IF':([27,62,142,145,152,154,166,170,],[52,52,52,52,52,52,-67,52,]),'TEACH_WHILE':([27,62,142,145,152,154,166,170,],[53,53,53,53,53,53,-67,53,]),'TEACH_FUNCTION_DECLARATION':([27,62,142,145,152,154,166,170,],[54,54,54,54,54,54,-67,54,]),'TEACH_FUNCTION_CALL':([27,62,142,145,152,154,166,170,],[55,55,55,55,55,55,-67,55,]),'AYUDA':([27,62,142,145,152,154,166,170,],[56,56,56,56,56,56,-67,56,]),'CTEI':([34,63,66,67,85,113,114,115,116,117,118,119,120,121,122,123,128,],[60,87,87,87,87,87,87,87,-59,-60,-61,-62,-63,-64,87,87,87,]),'EQUALS':([44,],[63,]),'COLON':([45,],[65,]),'RBRACKET':([60,],[79,]),'RETURN':([62,80,157,],[-19,-18,163,]),'FLOAT_NUMBER':([63,66,67,85,113,114,115,116,117,118,119,120,121,122,123,128,],[88,88,88,88,88,88,88,-59,-60,-61,-62,-63,-64,88,88,88,]),'STRING_LITERAL':([63,66,67,85,113,114,115,116,117,118,119,120,121,122,123,128,],[89,89,89,89,89,89,89,-59,-60,-61,-62,-63,-64,89,89,89,]),'TRUE':([63,66,67,85,113,114,115,116,117,118,119,120,121,122,123,128,],[90,90,90,90,90,90,90,-59,-60,-61,-62,-63,-64,90,90,90,]),'FALSE':([63,66,67,85,113,114,115,116,117,118,119,120,121,122,123,128,],[91,91,91,91,91,91,91,-59,-60,-61,-62,-63,-64,91,91,91,]),'MULTIPLY':([81,84,86,87,88,89,90,91,100,135,136,137,138,139,140,144,],[-54,122,-47,-49,-50,-51,-52,-53,-54,122,122,122,-45,-46,-48,122,]),'DIVIDE':([81,84,86,87,88,89,90,91,100,135,136,137,138,139,140,144,],[-54,123,-47,-49,-50,-51,-52,-53,-54,123,123,123,-45,-46,-48,123,]),'PLUS':([81,82,84,86,87,88,89,90,91,99,100,124,135,136,137,138,139,140,143,144,],[-54,113,-44,-47,-49,-50,-51,-52,-53,113,-54,113,-41,-42,-43,-45,-46,-48,113,-43,]),'MINUS':([81,82,84,86,87,88,89,90,91,99,100,124,135,136,137,138,139,140,143,144,],[-54,114,-44,-47,-49,-50,-51,-52,-53,114,-54,114,-41,-42,-43,-45,-46,-48,114,-43,]),'LESS_THAN':([81,82,84,86,87,88,89,90,91,99,100,124,135,136,137,138,139,140,143,144,],[-54,116,-44,-47,-49,-50,-51,-52,-53,116,-54,116,-41,-42,-43,-45,-46,-48,116,-43,]),'GREATER_THAN':([81,82,84,86,87,88,89,90,91,99,100,124,135,136,137,138,139,140,143,144,],[-54,117,-44,-47,-49,-50,-51,-52,-53,117,-54,117,-41,-42,-43,-45,-46,-48,117,-43,]),'LESS_EQUAL':([81,82,84,86,87,88,89,90,91,99,100,124,135,136,137,138,139,140,143,144,],[-54,118,-44,-47,-49,-50,-51,-52,-53,118,-54,118,-41,-42,-43,-45,-46,-48,118,-43,]),'GREATER_EQUAL':([81,82,84,86,87,88,89,90,91,99,100,124,135,136,137,138,139,140,143,144,],[-54,119,-44,-47,-49,-50,-51,-52,-53,119,-54,119,-41,-42,-43,-45,-46,-48,119,-43,]),'EQUAL_EQUAL':([81,82,84,86,87,88,89,90,91,99,100,124,135,136,137,138,139,140,143,144,],[-54,120,-44,-47,-49,-50,-51,-52,-53,120,-54,120,-41,-42,-43,-45,-46,-48,120,-43,]),'NOT_EQUAL':([81,82,84,86,87,88,89,90,91,99,100,124,135,136,137,138,139,140,143,144,],[-54,121,-44,-47,-49,-50,-51,-52,-53,121,-54,121,-41,-42,-43,-45,-46,-48,121,-43,]),'COMMA':([92,94,95,96,132,146,],[-40,126,-38,-39,148,-78,]),'ELSE':([155,],[160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'create_scopes':([4,],[5,]),'global_scope':([5,],[6,]),'main_function':([6,],[8,]),'end_scopes':([8,158,162,],[11,165,167,]),'decl_list':([10,24,],[13,33,]),'decl':([10,24,27,62,142,145,152,154,170,],[14,14,42,42,42,42,42,42,42,]),'empty':([10,23,24,29,111,112,148,155,157,],[15,30,15,30,133,133,133,161,164,]),'type':([10,23,24,27,29,62,111,112,142,145,148,152,154,170,],[16,31,16,16,31,16,130,130,16,16,130,16,16,16,]),'array_decl':([10,24,27,62,142,145,152,154,170,],[17,17,17,17,17,17,17,17,17,]),'function_decl_list':([23,29,],[28,57,]),'function_decl':([23,29,],[29,29,]),'stmt_list':([27,62,142,145,152,154,170,],[35,80,150,151,157,158,173,]),'stmt':([27,62,142,145,152,154,170,],[36,36,36,36,36,36,36,]),'assign':([27,62,142,145,152,154,170,],[37,37,37,37,37,37,37,]),'print':([27,62,142,145,152,154,170,],[38,38,38,38,38,38,38,]),'conditional':([27,62,142,145,152,154,170,],[39,39,39,39,39,39,39,]),'loop':([27,62,142,145,152,154,170,],[40,40,40,40,40,40,40,]),'function_call':([27,62,63,142,145,152,154,170,],[41,41,83,41,41,41,41,41,]),'built_in_function':([27,62,142,145,152,154,170,],[43,43,43,43,43,43,43,]),'expr':([63,66,67,85,128,],[82,99,99,124,143,]),'term':([63,66,67,85,113,114,115,128,],[84,84,84,84,135,136,137,144,]),'factor':([63,66,67,85,113,114,115,122,123,128,],[86,86,86,86,86,86,86,138,139,86,]),'arg_list':([64,126,],[93,141,]),'expr1':([64,126,163,],[94,94,168,]),'term1':([64,126,163,],[95,95,95,]),'factor1':([64,126,163,],[96,96,96,]),'comp_expr':([66,67,],[98,101,]),'create_function_scope':([77,78,],[111,112,]),'comp_op':([82,99,124,143,],[115,128,115,115,]),'param_list':([111,112,148,],[131,134,153,]),'param':([111,112,148,],[132,132,132,]),'else_stmt':([155,],[159,]),'return_stmt':([157,],[162,]),'else_part':([166,],[170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON create_scopes global_scope main_function end_scopes','program',7,'p_program','parser_2.py',27),
  ('global_scope -> VARIABLES LBRACE decl_list RBRACE function_decl_list','global_scope',5,'p_global_scope','parser_2.py',33),
  ('global_scope -> VARIABLES LBRACE decl_list RBRACE','global_scope',4,'p_global_scope','parser_2.py',34),
  ('function_decl_list -> function_decl function_decl_list','function_decl_list',2,'p_function_decl_list','parser_2.py',42),
  ('function_decl_list -> empty','function_decl_list',1,'p_function_decl_list','parser_2.py',43),
  ('main_function -> MAIN LPAREN RPAREN LBRACE stmt_list RBRACE','main_function',6,'p_main_function','parser_2.py',51),
  ('create_scopes -> <empty>','create_scopes',0,'p_create_scopes','parser_2.py',59),
  ('end_scopes -> <empty>','end_scopes',0,'p_end_scopes','parser_2.py',63),
  ('decl_list -> decl SEMICOLON decl_list','decl_list',3,'p_decl_list','parser_2.py',68),
  ('decl_list -> decl SEMICOLON','decl_list',2,'p_decl_list','parser_2.py',69),
  ('decl_list -> empty','decl_list',1,'p_decl_list','parser_2.py',70),
  ('decl -> type ID','decl',2,'p_decl','parser_2.py',78),
  ('decl -> array_decl SEMICOLON','decl',2,'p_decl','parser_2.py',79),
  ('type -> INT','type',1,'p_type','parser_2.py',84),
  ('type -> FLOAT','type',1,'p_type','parser_2.py',85),
  ('type -> STRING','type',1,'p_type','parser_2.py',86),
  ('type -> BOOL','type',1,'p_type','parser_2.py',87),
  ('stmt_list -> stmt SEMICOLON stmt_list','stmt_list',3,'p_stmt_list','parser_2.py',92),
  ('stmt_list -> stmt SEMICOLON','stmt_list',2,'p_stmt_list','parser_2.py',93),
  ('stmt -> assign','stmt',1,'p_stmt','parser_2.py',102),
  ('stmt -> print','stmt',1,'p_stmt','parser_2.py',103),
  ('stmt -> conditional','stmt',1,'p_stmt','parser_2.py',104),
  ('stmt -> loop','stmt',1,'p_stmt','parser_2.py',105),
  ('stmt -> function_call','stmt',1,'p_stmt','parser_2.py',106),
  ('stmt -> decl','stmt',1,'p_stmt','parser_2.py',107),
  ('stmt -> built_in_function','stmt',1,'p_stmt','parser_2.py',108),
  ('built_in_function -> TEACH_SUM LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',113),
  ('built_in_function -> TEACH_SUBSTRACTION LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',114),
  ('built_in_function -> TEACH_MULTIPLICATION LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',115),
  ('built_in_function -> TEACH_DIVISION LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',116),
  ('built_in_function -> TEACH_IF LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',117),
  ('built_in_function -> TEACH_WHILE LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',118),
  ('built_in_function -> TEACH_FUNCTION_DECLARATION LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',119),
  ('built_in_function -> TEACH_FUNCTION_CALL LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',120),
  ('built_in_function -> AYUDA LPAREN RPAREN','built_in_function',3,'p_built_in_function','parser_2.py',121),
  ('assign -> ID EQUALS expr','assign',3,'p_assign','parser_2.py',132),
  ('assign -> ID EQUALS function_call','assign',3,'p_assign','parser_2.py',133),
  ('expr1 -> term1','expr1',1,'p_expr1','parser_2.py',146),
  ('term1 -> factor1','term1',1,'p_term1','parser_2.py',150),
  ('factor1 -> ID','factor1',1,'p_factor1','parser_2.py',154),
  ('expr -> expr PLUS term','expr',3,'p_expr','parser_2.py',158),
  ('expr -> expr MINUS term','expr',3,'p_expr','parser_2.py',159),
  ('expr -> expr comp_op term','expr',3,'p_expr','parser_2.py',160),
  ('expr -> term','expr',1,'p_expr','parser_2.py',161),
  ('term -> term MULTIPLY factor','term',3,'p_term','parser_2.py',182),
  ('term -> term DIVIDE factor','term',3,'p_term','parser_2.py',183),
  ('term -> factor','term',1,'p_term','parser_2.py',184),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','parser_2.py',205),
  ('factor -> CTEI','factor',1,'p_factor','parser_2.py',206),
  ('factor -> FLOAT_NUMBER','factor',1,'p_factor','parser_2.py',207),
  ('factor -> STRING_LITERAL','factor',1,'p_factor','parser_2.py',208),
  ('factor -> TRUE','factor',1,'p_factor','parser_2.py',209),
  ('factor -> FALSE','factor',1,'p_factor','parser_2.py',210),
  ('factor -> ID','factor',1,'p_factor','parser_2.py',211),
  ('print -> PRINT COLON ID','print',3,'p_print','parser_2.py',244),
  ('conditional -> IF LPAREN comp_expr RPAREN LBRACE stmt_list RBRACE else_stmt','conditional',8,'p_conditional','parser_2.py',252),
  ('conditional -> IF LPAREN comp_expr RPAREN LBRACE stmt_list RBRACE','conditional',7,'p_conditional','parser_2.py',253),
  ('comp_expr -> expr comp_op expr','comp_expr',3,'p_comp_expr','parser_2.py',263),
  ('comp_op -> LESS_THAN','comp_op',1,'p_comp_op','parser_2.py',284),
  ('comp_op -> GREATER_THAN','comp_op',1,'p_comp_op','parser_2.py',285),
  ('comp_op -> LESS_EQUAL','comp_op',1,'p_comp_op','parser_2.py',286),
  ('comp_op -> GREATER_EQUAL','comp_op',1,'p_comp_op','parser_2.py',287),
  ('comp_op -> EQUAL_EQUAL','comp_op',1,'p_comp_op','parser_2.py',288),
  ('comp_op -> NOT_EQUAL','comp_op',1,'p_comp_op','parser_2.py',289),
  ('else_stmt -> ELSE LBRACE else_part stmt_list RBRACE','else_stmt',5,'p_else_stmt','parser_2.py',295),
  ('else_stmt -> empty','else_stmt',1,'p_else_stmt','parser_2.py',296),
  ('else_part -> <empty>','else_part',0,'p_else_part','parser_2.py',305),
  ('loop -> WHILE LPAREN comp_expr RPAREN LBRACE stmt_list RBRACE','loop',7,'p_loop','parser_2.py',311),
  ('create_function_scope -> <empty>','create_function_scope',0,'p_create_function_scope','parser_2.py',318),
  ('function_decl -> type ID LPAREN create_function_scope param_list RPAREN LBRACE stmt_list return_stmt end_scopes RBRACE','function_decl',11,'p_function_decl','parser_2.py',325),
  ('function_decl -> VOID ID LPAREN create_function_scope param_list RPAREN LBRACE stmt_list end_scopes RBRACE','function_decl',10,'p_function_decl','parser_2.py',326),
  ('return_stmt -> RETURN expr1 SEMICOLON','return_stmt',3,'p_return_stmt','parser_2.py',347),
  ('return_stmt -> empty','return_stmt',1,'p_return_stmt','parser_2.py',348),
  ('function_call -> ID LPAREN arg_list RPAREN','function_call',4,'p_function_call','parser_2.py',357),
  ('param_list -> param COMMA param_list','param_list',3,'p_param_list','parser_2.py',365),
  ('param_list -> param','param_list',1,'p_param_list','parser_2.py',366),
  ('param_list -> empty','param_list',1,'p_param_list','parser_2.py',367),
  ('param -> type ID','param',2,'p_param','parser_2.py',375),
  ('arg_list -> expr1','arg_list',1,'p_arg_list_single','parser_2.py',389),
  ('arg_list -> expr1 COMMA arg_list','arg_list',3,'p_arg_list_multiple','parser_2.py',393),
  ('array_decl -> type ID LBRACKET CTEI RBRACKET','array_decl',5,'p_array_decl','parser_2.py',398),
  ('empty -> <empty>','empty',0,'p_empty','parser_2.py',429),
]
